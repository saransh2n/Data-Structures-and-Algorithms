/* Given an array of integers nums and an integer k, return the total number of subarrays whose sum equals to k.
A subarray is a contiguous non-empty sequence of elements within an array. */

 int subarraySum(vector<int>& nums, int k) {
     int n = nums.size() ;
     int count = 0;  
     if(n==1 && nums[0]!=k)
        return 0;
     map<int,int> mpp; 
     int sum = 0;
     for(int i=0; i<n; i++){
        sum += nums[i];
        if(sum==k){
            count++;}
        if(mpp.find(sum-k) != mpp.end())
            count = count + mpp[sum-k];
        mpp[sum]++;
     }
     return count;
    }
